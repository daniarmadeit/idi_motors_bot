#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è IDI Motors Bot –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä–µ
# –ó–∞–ø—É—Å–∫: sudo bash deploy.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è IDI Motors Bot..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ root)
if [ "$SUDO_USER" ]; then
    REAL_USER=$SUDO_USER
else
    REAL_USER=$(whoami)
fi

HOME_DIR=$(eval echo ~$REAL_USER)
PROJECT_DIR="$HOME_DIR/idi_motors_bot"

echo -e "${YELLOW}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $REAL_USER${NC}"
echo -e "${YELLOW}–î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $HOME_DIR${NC}"
echo -e "${YELLOW}–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR${NC}"

# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo -e "\n${GREEN}[1/8] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
apt update && apt upgrade -y

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "\n${GREEN}[2/8] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
apt install -y python3 python3-pip python3-venv git curl \
    libjpeg-dev zlib1g-dev libpng-dev libtiff-dev \
    libfreetype6-dev liblcms2-dev libwebp-dev \
    libgl1 libglib2.0-0 libgomp1

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
echo -e "\n${GREEN}[3/8] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python...${NC}"
PYTHON_VERSION=$(python3 --version | cut -d ' ' -f 2 | cut -d '.' -f 1,2)
echo "–í–µ—Ä—Å–∏—è Python: $PYTHON_VERSION"

# 4. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo -e "\n${GREEN}[4/8] –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
if [ -d "$PROJECT_DIR" ]; then
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
    cd "$PROJECT_DIR"
    sudo -u $REAL_USER git pull origin master
else
    echo "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    cd "$HOME_DIR"
    sudo -u $REAL_USER git clone https://github.com/daniarmadeit/idi_motors_bot.git
    cd "$PROJECT_DIR"
fi

# 5. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "\n${GREEN}[5/8] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ venv –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
if [ -d "venv" ]; then
    echo "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    rm -rf venv
fi

echo "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
sudo -u $REAL_USER python3 -m venv venv

echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo -u $REAL_USER bash -c "source venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt"

# 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞
echo -e "\n${GREEN}[6/8] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ .env.example...${NC}"
    sudo -u $REAL_USER cp .env.example .env
    echo -e "${RED}‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω—ã!${NC}"
    echo -e "${RED}    nano $PROJECT_DIR/.env${NC}"
    echo -e "${RED}    –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –∏ OPENAI_API_KEY${NC}"
else
    echo ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# 7. –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "\n${GREEN}[7/8] –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

# IOPaint —Å–µ—Ä–≤–∏—Å
cat > /etc/systemd/system/iopaint.service << EOF
[Unit]
Description=IOPaint Image Processing Service
After=network.target

[Service]
Type=simple
User=$REAL_USER
WorkingDirectory=$PROJECT_DIR
ExecStart=$PROJECT_DIR/venv/bin/iopaint start --model=migan --device=cpu --port=8085 --host=127.0.0.1 --enable-realesrgan --realesrgan-model=realesr-general-x4v3
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

echo "‚úì –°–æ–∑–¥–∞–Ω iopaint.service"

# Telegram Bot —Å–µ—Ä–≤–∏—Å
cat > /etc/systemd/system/rusbot.service << EOF
[Unit]
Description=IDI Motors Telegram Bot
After=network.target iopaint.service
Requires=iopaint.service

[Service]
Type=simple
User=$REAL_USER
WorkingDirectory=$PROJECT_DIR
ExecStart=$PROJECT_DIR/venv/bin/python rus_bot.py
Restart=always
RestartSec=10
Environment="PYTHONUNBUFFERED=1"

[Install]
WantedBy=multi-user.target
EOF

echo "‚úì –°–æ–∑–¥–∞–Ω rusbot.service"

# 8. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "\n${GREEN}[8/8] –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
systemctl daemon-reload

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã)
systemctl stop rusbot.service 2>/dev/null || true
systemctl stop iopaint.service 2>/dev/null || true

# –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
systemctl enable iopaint.service
systemctl enable rusbot.service

# –ó–∞–ø—É—Å–∫ IOPaint
echo "–ó–∞–ø—É—Å–∫ IOPaint..."
systemctl start iopaint.service

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ IOPaint (–º–æ–¥–µ–ª–∏ –º–æ–≥—É—Ç –≥—Ä—É–∑–∏—Ç—å—Å—è –¥–æ–ª–≥–æ)
echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ IOPaint (15 —Å–µ–∫—É–Ω–¥)..."
sleep 15

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
echo "–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞..."
systemctl start rusbot.service

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -e "\n${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
echo -e "${GREEN}–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"

systemctl status iopaint.service --no-pager -l
echo ""
systemctl status rusbot.service --no-pager -l

echo -e "\n${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
echo -e "${GREEN}‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"

if [ ! -s "$PROJECT_DIR/.env" ] || ! grep -q "BOT_TOKEN=.\+" "$PROJECT_DIR/.env" 2>/dev/null; then
    echo -e "\n${RED}‚ö†Ô∏è  –ù–ï –ó–ê–ë–£–î–¨–¢–ï –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Ñ–∞–π–ª:${NC}"
    echo -e "${YELLOW}1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ: nano $PROJECT_DIR/.env${NC}"
    echo -e "${YELLOW}2. –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –∏ OPENAI_API_KEY${NC}"
    echo -e "${YELLOW}3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo -e "${YELLOW}   sudo systemctl restart iopaint.service${NC}"
    echo -e "${YELLOW}   sudo systemctl restart rusbot.service${NC}"
fi

echo -e "\n${GREEN}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "–õ–æ–≥–∏ IOPaint:      sudo journalctl -u iopaint.service -f"
echo "–õ–æ–≥–∏ –±–æ—Ç–∞:         sudo journalctl -u rusbot.service -f"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:        sudo systemctl restart rusbot.service"
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞:         sudo systemctl stop rusbot.service"
echo "–°—Ç–∞—Ç—É—Å:            sudo systemctl status rusbot.service"
